#!/bin/bash
# ÈñãÁô∫Áí∞Â¢ÉÔºöÊú¨Áï™S3„Åã„ÇâÊúÄÊñ∞„Éá„Éº„Çø„ÇíÂêåÊúü
# manifest.json„ÅÆ„Çø„Ç§„É†„Çπ„Çø„É≥„Éó„ÇíÊØîËºÉ„Åó„Å¶„ÄÅS3„ÅÆÊñπ„ÅåÊñ∞„Åó„ÅÑÂ†¥Âêà„ÅÆ„ÅøÂêåÊúü

set -e

BUCKET="dash-plotly"
PREFIX="parquet/"
LOCAL_DIR="data/parquet"
LOCAL_MANIFEST="${LOCAL_DIR}/manifest.json"
S3_MANIFEST_URL="s3://${BUCKET}/${PREFIX}manifest.json"
TEMP_MANIFEST="/tmp/s3_manifest.json"

echo "üì• Checking for updates from S3..."
echo "   Bucket: s3://${BUCKET}/${PREFIX}"
echo "   Local:  ${LOCAL_DIR}"
echo ""

# data/parquet„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ‰ΩúÊàê
mkdir -p "${LOCAL_DIR}"

# S3„ÅÆmanifest.json„Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ
if ! aws s3 cp "${S3_MANIFEST_URL}" "${TEMP_MANIFEST}" 2>/dev/null; then
  echo "‚ùå Failed to download manifest.json from S3"
  exit 1
fi

# „É≠„Éº„Ç´„É´„ÅÆmanifest.json„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØÂøÖ„ÅöÂêåÊúü
if [[ ! -f "${LOCAL_MANIFEST}" ]]; then
  echo "‚ÑπÔ∏è Local manifest.json not found. Syncing all data..."
  aws s3 sync "s3://${BUCKET}/${PREFIX}" "${LOCAL_DIR}" \
    --exclude "*" \
    --include "*.parquet" \
    --include "manifest.json"
  echo ""
  echo "‚úÖ Development environment initialized with production data"
  ls -lh "${LOCAL_DIR}"
  exit 0
fi

# „Çø„Ç§„É†„Çπ„Çø„É≥„Éó„ÇíÊØîËºÉÔºàgenerated_at„Éï„Ç£„Éº„É´„ÉâÔºâ
LOCAL_TIME=$(python3 -c "import json; print(json.load(open('${LOCAL_MANIFEST}'))['generated_at'])" 2>/dev/null || echo "1970-01-01T00:00:00+00:00")
S3_TIME=$(python3 -c "import json; print(json.load(open('${TEMP_MANIFEST}'))['generated_at'])")

echo "Local timestamp: ${LOCAL_TIME}"
echo "S3 timestamp:    ${S3_TIME}"
echo ""

# ISO 8601ÂΩ¢Âºè„ÅÆÊñáÂ≠óÂàóÊØîËºÉÔºàËæûÊõ∏È†Ü„ÅßÊØîËºÉÂèØËÉΩÔºâ
if [[ "${S3_TIME}" > "${LOCAL_TIME}" ]]; then
  echo "‚úÖ S3 data is newer. Syncing..."
  aws s3 sync "s3://${BUCKET}/${PREFIX}" "${LOCAL_DIR}" \
    --exclude "*" \
    --include "*.parquet" \
    --include "manifest.json"
  echo ""
  echo "‚úÖ Development environment updated with production data"
  echo ""
  echo "Updated files:"
  ls -lh "${LOCAL_DIR}"
elif [[ "${S3_TIME}" == "${LOCAL_TIME}" ]]; then
  echo "‚ÑπÔ∏è Local data is up to date. No sync needed."
else
  echo "‚ö†Ô∏è Local data is NEWER than S3 (development changes detected)"
  echo "   Keeping local data. Run with --force to overwrite."

  if [[ "$1" == "--force" ]]; then
    echo ""
    echo "üîÑ Force syncing from S3..."
    aws s3 sync "s3://${BUCKET}/${PREFIX}" "${LOCAL_DIR}" \
      --exclude "*" \
      --include "*.parquet" \
      --include "manifest.json"
    echo "‚úÖ Forced sync completed"
  fi
fi

# „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
rm -f "${TEMP_MANIFEST}"
