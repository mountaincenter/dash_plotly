name: Deploy to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - 'Dockerfile'
      - 'requirements.txt'
      - '.github/workflows/deploy-ecr.yml'

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: dash-plotly

jobs:
  deploy:
    name: Build and Push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .

          # Push both tags to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "âœ… Pushed image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "âœ… Pushed image: $ECR_REGISTRY/$ECR_REPOSITORY:latest"

      - name: Trigger App Runner deployment
        run: |
          echo "ðŸš€ Image pushed to ECR. App Runner will automatically deploy the latest image."
          echo "Check App Runner console for deployment status."
