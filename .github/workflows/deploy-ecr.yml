name: Deploy to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - 'Dockerfile'
      - 'requirements.txt'
      - '.github/workflows/deploy-ecr.yml'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    environment: AWS_OIDC

    env:
      AWS_REGION: ${{ vars.AWS_REGION || 'ap-northeast-1' }}
      ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY || 'dash-plotly' }}
      ECR_REPO: ${{ vars.ECR_REPO }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build Docker image with both tags
          docker build -t ${{ env.ECR_REPO }}:$IMAGE_TAG .
          docker build -t ${{ env.ECR_REPO }}:latest .

          # Push both tags to ECR
          docker push ${{ env.ECR_REPO }}:$IMAGE_TAG
          docker push ${{ env.ECR_REPO }}:latest

          echo "image=${{ env.ECR_REPO }}:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "âœ… Pushed image: ${{ env.ECR_REPO }}:$IMAGE_TAG"
          echo "âœ… Pushed image: ${{ env.ECR_REPO }}:latest"
          echo ""
          echo "ðŸš€ App Runner will automatically deploy the new image."
          echo "Check App Runner console for deployment status."
