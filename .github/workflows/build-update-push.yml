name: Build, Update Parquet & Push to ECR

on:
  push:
    branches: [main]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

jobs:
  build-update-push:
    runs-on: ubuntu-latest
    environment:
      name: AWS_OIDC
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      DATA_BUCKET: ${{ vars.DATA_BUCKET || vars.S3_BUCKET }}
      PARQUET_PREFIX: ${{ vars.PARQUET_PREFIX }}

    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Resolve AWS account id
        id: aws
        run: |
          echo "account_id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" \
            --image-scanning-configuration scanOnPush=true \
            --encryption-configuration encryptionType=AES256 \
            >/dev/null

      - name: Login to ECR
        run: |
          ACCOUNT_ID="${{ steps.aws.outputs.account_id }}"
          aws ecr get-login-password --region "$AWS_REGION" | \
          docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"

      - name: Build and tag image
        run: |
          ACCOUNT_ID="${{ steps.aws.outputs.account_id }}"
          IMAGE="$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"
          TAG="${GITHUB_SHA::7}"
          docker build -t "$IMAGE:$TAG" -t "$IMAGE:latest" .

      - name: Push image
        run: |
          ACCOUNT_ID="${{ steps.aws.outputs.account_id }}"
          IMAGE="$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"
          TAG="${GITHUB_SHA::7}"
          docker push "$IMAGE:$TAG"
          docker push "$IMAGE:latest"

      - name: Output image digest
        id: img
        run: |
          ACCOUNT_ID="${{ steps.aws.outputs.account_id }}"
          IMAGE="$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"
          DIGEST=$(aws ecr describe-images --repository-name "$ECR_REPOSITORY" --image-ids imageTag=latest \
                   --query 'imageDetails[0].imageDigest' --output text)
          echo "image=$IMAGE@${DIGEST}" >> $GITHUB_OUTPUT
          echo "Pushed: $IMAGE@${DIGEST}"
